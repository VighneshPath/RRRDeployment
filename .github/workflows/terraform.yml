name: Terraform

on:
  push:
    branches: [terra]
  pull_request:

jobs:
  # test-project:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./esop-trading
  #   steps:
  #     - name: Checkout project sources
  #       uses: actions/checkout@v3

  #     - name: Validate gradle
  #       uses: gradle/wrapper-validation-action@v1

  #     - name: Setup JDK 17
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '17'
  #         distribution: 'temurin'

  #     - name: Setup Gradle
  #       uses: gradle/gradle-build-action@v2

  #     - name: Run build with Gradle Wrapper
  #       run: ./gradlew build

  #     - name: Run tests with Gradle Wrapper
  #       run: ./gradlew test

  terraform:
    # needs: test-project
    name: 'Terraform'
    runs-on: ubuntu-22.04
    outputs:
      output1: ${{ steps.get-ip.outputs.t }}
    permissions:
      pull-requests: write
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v1
      #   with:
      #     # terraform_version: 0.13.0
      #     cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/terra' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false

      - name: Terraform IP Output 
        id: get-ip
        run: echo "t=$(terraform output instance_ip_addr)" >> $GITHUB_OUTPUT

      - name: Check plan
        run: echo ${{ steps.plan.outputs.stdout }}
      
      - name: Check log
        run: echo ${{ steps.get-ip.outputs.t }}

  build-project:
    needs: terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./esop-trading
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Create shadow jar
        run: ./gradlew shadowJar

      - name: Setup pem file
        run: echo '${{ secrets.KEY }}' > file.pem
          | chmod 400 file.pem
          
      - name: ls
        run: ls
      - name: Run scp to get the jar to instance
        run: scp -o StrictHostKeyChecking=no -i file.pem "./build/libs/esop-trading-0.1-all.jar" ${{ secrets.USERNAME }}@${{ needs.terraform.outputs.output1 }}:~/

      - name: execute remote commands
        run: ssh -o StrictHostKeyChecking=no -i file.pem ${{ secrets.USERNAME }}@${{ needs.terraform.outputs.output1 }} '
          nohup java -jar ./build/libs/esop-trading-0.1-all.jar > /dev/null 2>&1&'
